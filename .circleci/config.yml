version: 2.1

jobs:
  test:
    docker:
      - image: circleci/python:3.9

    steps:
      - checkout

      # - run:
      #     name: Install dependencies
      #     command: |
      #         python -m venv venv
      #         . venv/bin/activate
      #         pip install requirements.txt

      - run:
          name: Run tests
          command: |
              cd ../cloud_function/
              python3 -m unittest test_main.py
          fail_fast: true  # Stop execution on first test failure

  deploy:
    docker:
      - image: google/cloud-sdk:latest  # Use the latest Cloud SDK image
    requires:
      - test  # Deployment workflow requires successful completion of 'test' workflow
    steps:
      - checkout
      # Set the GOOGLE_APPLICATION_CREDENTIALS environment variable
      - run:
          name: Set Google Cloud service account key
          command: |
            echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/gcp-key.json
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-key.json"

      # activate SA for gcloud
      - run: |
          gcloud auth activate-service-account --key-file="/tmp/gcp-key.json"

      # Function specific details (replace with your configuration)
      - run: |
          PROJECT=latam-challenge-421420
          FUNCTION_NAME=get_flights
          REGION=southamerica-west1
          ENTRYPOINT=get_flights
          RUNTIME=python39
          SOURCE=./cloud_function
          gcloud functions deploy $FUNCTION_NAME \
              --gen2 \
              --max-instances=1 \
              --project $PROJECT \
              --region $REGION \
              --runtime $RUNTIME \
              --trigger-http \
              --entry-point $ENTRYPOINT \
              --allow-unauthenticated \
              --service-account cf-deployer-sa@latam-challenge-421420.iam.gserviceaccount.com \
              --source=$SOURCE

workflows:
  version: 2
  test:
    jobs:
      - test

  deploy:
    jobs:
      - deploy
